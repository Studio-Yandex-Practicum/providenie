name: bot-providenie workflow

on:
  push:
    branches: [release]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: installation
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{  secrets.DOCKER_USERNAME  }}
          password: ${{  secrets.DOCKER_PASSWORD  }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./Dockerfile
          push: true
          tags: ${{  secrets.DOCKER_USERNAME  }}/providenie:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME  }}/providenie
            sudo docker-compose stop
            sudo docker-compose rm providenie
            rm -f .env
            touch .env
            echo TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo EMAIL_BOT=${{ secrets.EMAIL_BOT }} >> .env
            echo EMAIL_BOT_PASSWORD=${{ secrets.EMAIL_BOT_PASSWORD }} >> .env
            echo EMAIL_CURATOR=${{ secrets.EMAIL_CURATOR }} >> .env
            echo LOG_LEVEL=${{ secrets.LOG_LEVEL }} >> .env
            sudo docker-compose up -d
