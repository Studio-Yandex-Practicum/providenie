name: bot-providenie workflow

on:
  push:
    branches: [release]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Uploading project files to remote server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          source: .
          target: /home/${{ secrets.USER }}/providenie

      - name: Building Docker image on remote server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/${{ secrets.USER }}/providenie
            docker image prune -f
            docker build --no-cache -t providenie:latest .
            rm -f .env
            touch .env
            echo TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo EMAIL_BOT=${{ secrets.EMAIL_BOT }} >> .env
            echo EMAIL_BOT_PASSWORD=${{ secrets.EMAIL_BOT_PASSWORD }} >> .env
            echo EMAIL_CURATOR=${{ secrets.EMAIL_CURATOR }} >> .env
            echo LOG_LEVEL=${{ secrets.LOG_LEVEL }} >> .env
            docker compose --file docker-compose.yaml stop
            docker compose --file docker-compose.yaml rm bot -f
            docker compose --file docker-compose.yaml  up -d
