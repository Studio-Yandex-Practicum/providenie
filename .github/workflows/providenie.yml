name: bot-providenie workflow

on:
  push:
    branches: [release]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Deploy on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/home/${{ secrets.USER }}

            if [ ! -d providenie ]
            then sudo git clone -b release git@github.com:Studio-Yandex-Practicum/providenie.git
            else cd providenie
            git checkout release
            git pull
            fi

            cd providenie
            rm -f .env
            touch .env
            echo TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo SMTP_SERVER_PORT="${{ secrets.SMTP_SERVER_PORT }}" >> .env
            echo SMTP_SERVER_ADDRESS="${{ secrets.SMTP_SERVER_ADDRESS }}" >> .env
            echo SMTP_SERVER_BOT_EMAIL=${{ secrets.EMAIL_BOT }} >> .env
            echo SMTP_SERVER_BOT_PASSWORD=${{ secrets.EMAIL_BOT_PASSWORD }} >> .env
            echo EMAIL_CURATOR=${{ secrets.EMAIL_CURATOR }} >> .env
            echo LOG_LEVEL=${{ secrets.LOG_LEVEL }} >> .env
            docker compose --file docker-compose.yaml stop
            docker compose --file docker-compose.yaml rm bot -f
            docker compose --file docker-compose.yaml up --build -d